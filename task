#!/bin/bash
set -e

function help() {
    echo
    echo "task <command> [options]"
    echo
    echo "commands:"
    echo

    # Define column widths
    CMD_WIDTH=10
    OPT_WIDTH=6
    DESC_WIDTH=40
    COLUMN="| %-${CMD_WIDTH}s | %-${OPT_WIDTH}s | %-${DESC_WIDTH}s |\n"

    # Print table header
    printf "$COLUMN" "Command" "Option" "Description"
    echo "|$(printf '%*s' $((CMD_WIDTH + 2)) '' | tr ' ' '-')|$(printf '%*s' $((OPT_WIDTH + 2)) '' | tr ' ' '-')|$(printf '%*s' $((DESC_WIDTH + 2)) '' | tr ' ' '-')|"

    # Print table rows

    printf "$COLUMN" "run" "" "Run cargo project."
    printf "$COLUMN" "build" "" "Build the container image."
    printf "$COLUMN" "start" "" "Start the container (detached mode)."
    printf "$COLUMN" "stop" "" "Stop the running container."
    printf "$COLUMN" "remove" "" "Remove the stopped container."
    printf "$COLUMN" "publish" "" "Push the container image to the registry."

    echo
}


function run() {
    cargo run
}

function build() {
    docker build -t mintsystem/varlog .
}

function start() {
    echo "Open url: http://localhost:8080/ui"
    docker run -d -p 8080:8080 --name varlog mintsystem/varlog
}

function stop() {
    docker stop varlog
}

function remove() {
    docker rm -f varlog
}

function publish() {
    docker tag varlog mintsystem/varlog:latest
    docker push mintsystem/varlog:latest
}

if declare -f "$1" > /dev/null; then
    "$1" "${@:2}"
else
    case "$1" in
        *)
            echo "Unknown command: $1"
            help
            exit 1
            ;;
    esac
fi

